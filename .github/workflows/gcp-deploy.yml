name: Build and Deploy to GCP

on:
  push:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: open-webui
  REGION: asia-northeast3  # 서울 리전

jobs:
  setup-build-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Google Auth
      id: auth
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1

    - name: Configure Docker
      run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

    - name: Create Artifact Registry repository if it doesn't exist
      run: |
        if ! gcloud artifacts repositories describe ${{ env.SERVICE_NAME }} --location=${{ env.REGION }} 2>/dev/null; then
          gcloud artifacts repositories create ${{ env.SERVICE_NAME }} \
            --repository-format=docker \
            --location=${{ env.REGION }}
        fi

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and Push Container
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
        build-args: |
          BUILD_HASH=${{ github.sha }}

    - name: Deploy to Cloud Run
      run: |-
        gcloud run deploy ${{ env.SERVICE_NAME }} \
          --region=${{ env.REGION }} \
          --image=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
          --platform=managed \
          --allow-unauthenticated \
          --add-cloudsql-instances=${{ env.PROJECT_ID }}:${{ env.REGION }}:open-webui-db \
          --set-env-vars="DB_HOST=localhost,DB_USER=${{ secrets.DB_USER }},DB_PASS=${{ secrets.DB_PASS }},DB_NAME=${{ secrets.DB_NAME }},DATABASE_URL=mysql+pymysql://${{ secrets.DB_USER }}:${{ secrets.DB_PASS }}@localhost/${{ secrets.DB_NAME }}?unix_socket=/cloudsql/${{ env.PROJECT_ID }}:${{ env.REGION }}:open-webui-db" \
          --timeout=300s
